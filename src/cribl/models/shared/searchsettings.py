"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from cribl import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class SearchSettings:
    field_summary_max_fields: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldSummaryMaxFields') }})
    field_summary_max_nested_depth: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldSummaryMaxNestedDepth') }})
    max_executors_per_search: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxExecutorsPerSearch') }})
    max_results_per_search: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxResultsPerSearch') }})
    max_search_duration: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSearchDuration') }})
    search_history_max_jobs: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchHistoryMaxJobs') }})
    search_history_ttl: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchHistoryTTL') }})
    

