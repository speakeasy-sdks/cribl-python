"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import notificationtarget as shared_notificationtarget
from cribl import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional, Union


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class NotificationTargets:
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""number of items present in the items array"""
    items: Optional[list[Union[shared_notificationtarget.NotificationTargetNotificationTargetBase, shared_notificationtarget.NotificationTargetNotificationTargetDefault, shared_notificationtarget.NotificationTargetNotificationTargetWebhook, shared_notificationtarget.NotificationTargetNotificationTargetBulletinMessage, shared_notificationtarget.NotificationTargetNotificationTargetRouter, shared_notificationtarget.NotificationTargetNotificationTargetNotificationsLog, shared_notificationtarget.NotificationTargetNotificationTargetPagerDuty]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})
    

