"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from cribl import utils
from dataclasses_json import Undefined, dataclass_json


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class JobSettings:
    concurrent_job_limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('concurrentJobLimit') }})
    concurrent_scheduled_job_limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('concurrentScheduledJobLimit') }})
    concurrent_system_job_limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('concurrentSystemJobLimit') }})
    concurrent_system_task_limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('concurrentSystemTaskLimit') }})
    concurrent_task_limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('concurrentTaskLimit') }})
    finished_job_artifacts_limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finishedJobArtifactsLimit') }})
    finished_task_artifacts_limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finishedTaskArtifactsLimit') }})
    job_artifacts_reaper_period: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobArtifactsReaperPeriod') }})
    job_timeout: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobTimeout') }})
    max_task_perc: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxTaskPerc') }})
    scheduling_policy: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedulingPolicy') }})
    task_heartbeat_period: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskHeartbeatPeriod') }})
    task_manifest_flush_period_ms: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskManifestFlushPeriodMs') }})
    task_manifest_max_buffer_size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskManifestMaxBufferSize') }})
    task_manifest_read_buffer_size: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskManifestReadBufferSize') }})
    task_poll_timeout_ms: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskPollTimeoutMs') }})
    

