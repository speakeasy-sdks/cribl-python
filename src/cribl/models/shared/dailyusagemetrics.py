"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from cribl import utils
from dataclasses_json import Undefined, dataclass_json


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DailyUsageMetrics:
    end_time: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime') }})
    exempted_license_in_bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptedLicenseInBytes') }})
    in_bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inBytes') }})
    in_events: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inEvents') }})
    out_bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outBytes') }})
    out_events: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outEvents') }})
    start_time: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime') }})
    

