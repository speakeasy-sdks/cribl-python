"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from cribl import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DatatypeOverrides:
    disable_breakers: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableBreakers') }})
    breaker_rulesets: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('breakerRulesets'), 'exclude': lambda f: f is None }})
    

