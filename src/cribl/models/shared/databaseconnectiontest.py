"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from cribl import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DatabaseConnectionTest:
    r"""DatabaseConnectionTest object"""
    auth_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authType') }})
    database_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databaseType') }})
    config_obj: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configObj'), 'exclude': lambda f: f is None }})
    connection_string: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectionString'), 'exclude': lambda f: f is None }})
    connection_timeout: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectionTimeout'), 'exclude': lambda f: f is None }})
    text_secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textSecret'), 'exclude': lambda f: f is None }})
    

