"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .jobstatus import JobStatus
from .runnablejobcollection import RunnableJobCollection
from .runnablejobexecutor import RunnableJobExecutor
from .runnablejobscheduledsearch import RunnableJobScheduledSearch
from cribl import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional, Union


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobInfo:
    args: Union[RunnableJobCollection, RunnableJobExecutor, RunnableJobScheduledSearch] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args') }})
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    status: JobStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    keep: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keep'), 'exclude': lambda f: f is None }})
    

