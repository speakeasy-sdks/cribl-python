"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import packinfos as components_packinfos
from typing import Optional


@dataclasses.dataclass
class UpgradePackRequest:
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Pack name"""
    minor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minor', 'style': 'form', 'explode': True }})
    r"""body boolean optional Only upgrade to minor/patch versions"""
    source: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'source', 'style': 'form', 'explode': True }})
    r"""body string required Pack source"""
    spec: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'spec', 'style': 'form', 'explode': True }})
    r"""body string optional Specify a branch, tag or a semver spec"""
    



@dataclasses.dataclass
class UpgradePackResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    pack_infos: Optional[components_packinfos.PackInfos] = dataclasses.field(default=None)
    r"""a list of PackInfo objects"""
    

