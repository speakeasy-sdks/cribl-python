"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import cluiitems as shared_cluiitems
from typing import Optional



@dataclasses.dataclass
class GetCluisRequest:
    query: str = dataclasses.field(metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})
    r"""Search query"""
    context: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'context', 'style': 'form', 'explode': True }})
    r"""Search query context, either \\"stream\\" or \\"edge\\" """
    




@dataclasses.dataclass
class GetCluisResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    clui_items: Optional[shared_cluiitems.CluiItems] = dataclasses.field(default=None)
    r"""a list of CluiItem objects"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

