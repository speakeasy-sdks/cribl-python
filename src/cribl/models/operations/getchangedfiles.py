"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import changedfiles as components_changedfiles
from ...models.components import httpmetadata as components_httpmetadata
from typing import Optional


@dataclasses.dataclass
class GetChangedFilesRequest:
    id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ID', 'style': 'form', 'explode': True }})
    r"""Commit ID"""
    group: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'group', 'style': 'form', 'explode': True }})
    r"""Group ID"""
    



@dataclasses.dataclass
class GetChangedFilesResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    changed_files: Optional[components_changedfiles.ChangedFiles] = dataclasses.field(default=None)
    r"""a list of GitFilesResponse objects"""
    

