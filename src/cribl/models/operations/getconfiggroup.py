"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import configgroup as components_configgroup
from ...models.components import httpmetadata as components_httpmetadata
from typing import Optional


@dataclasses.dataclass
class GetConfigGroupRequest:
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Unique ID"""
    fields: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""query string additional fields to add to results: git.commit, git.localChanges, git.log"""
    



@dataclasses.dataclass
class GetConfigGroupResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    config_group: Optional[components_configgroup.ConfigGroup] = dataclasses.field(default=None)
    r"""a list of ConfigGroup objects"""
    

