"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import textualdiff as shared_textualdiff
from typing import Optional



@dataclasses.dataclass
class GetLogandTextualRequest:
    commit: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'commit', 'style': 'form', 'explode': True }})
    r"""Commit hash (default is HEAD)"""
    group: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'group', 'style': 'form', 'explode': True }})
    r"""Group ID"""
    




@dataclasses.dataclass
class GetLogandTextualResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    textual_diff: Optional[shared_textualdiff.TextualDiff] = dataclasses.field(default=None)
    r"""a list of any objects"""
    

