"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import samplefiles as shared_samplefiles
from typing import Optional



@dataclasses.dataclass
class GetBytesRequest:
    path: str = dataclasses.field(metadata={'query_param': { 'field_name': 'path', 'style': 'form', 'explode': True }})
    r"""The path to the file to sample"""
    bytes_requested: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'bytesRequested', 'style': 'form', 'explode': True }})
    r"""The number of bytes to return;   this value could be constrained by system limits."""
    




@dataclasses.dataclass
class GetBytesResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    sample_files: Optional[shared_samplefiles.SampleFiles] = dataclasses.field(default=None)
    r"""a list of SampleFile objects"""
    

