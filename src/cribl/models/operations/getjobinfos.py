"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import jobinfos as shared_jobinfos
from typing import Optional



@dataclasses.dataclass
class GetJobInfosRequest:
    collector_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'collectorId', 'style': 'form', 'explode': True }})
    r"""Filter by collector id, e.g. \\"collectorId=Prometheus-in\\" """
    id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""Filter by job id, e.g. \\"id=1608713335.3&id=1608713326.1\\" """
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Maximum number of items to return"""
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Pagination offset"""
    run_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'runType', 'style': 'form', 'explode': True }})
    r"""Filter by job run type, one of \\"adhoc\\", \\"scheduled\\", \\"system\\" """
    state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""Filter by current job state, e.g. \\"running\\" """
    




@dataclasses.dataclass
class GetJobInfosResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    job_infos: Optional[shared_jobinfos.JobInfos] = dataclasses.field(default=None)
    r"""a list of JobInfo objects"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

