"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import criblpackage as components_criblpackage
from ...models.components import distributedupgraderequest as components_distributedupgraderequest
from ...models.components import httpmetadata as components_httpmetadata
from typing import Optional


@dataclasses.dataclass
class PostExecuteDistributedUpgradeRequest:
    group: str = dataclasses.field(metadata={'path_param': { 'field_name': 'group', 'style': 'simple', 'explode': False }})
    r"""Group to upgrade"""
    distributed_upgrade_request: Optional[components_distributedupgraderequest.DistributedUpgradeRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""distributedUpgrade object"""
    



@dataclasses.dataclass
class PostExecuteDistributedUpgradeResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    cribl_package: Optional[components_criblpackage.CriblPackage] = dataclasses.field(default=None)
    r"""a list of any objects"""
    

